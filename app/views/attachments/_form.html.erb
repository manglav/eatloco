<%= simple_form_for(@attachment) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
		<%= f.input :filename %>
		<%= f.input :size %>
		<%= f.input :filetype %>
		<%= f.input :url %>


    <%= f.label :filepicker_url, "Upload Your Avatar:" %>
    <%= f.filepicker_field :url, multiple: true, onchange:'sample()'%> <!-- User#filepicker_url is a regular string column -->
  </div>

	<div class="uploaded-pictures">
		<h3> Uploaded Pictures </h3>
	</div>

  <div class="form-actions">
    <%= f.button :submit %>
  </div>
<% end %>



<script type="text/javascript">

var sample = function() {
	event.fpfiles.forEach(function(file) {

		var newfile = {
			url: file.url,
			filename: file.filename,
			filetype: file.mimetype,
			size: file.size
		}

		$.ajax({
			url: "/attachments.json",
			type: "POST",
			data: {attachment: newfile},
			success: function (data) {
				console.log(data);
				displayPicture(data);
				addAttachmentID(data);
			},
			error: function (req, textStatus) {
				displayError(textStatus);
			}
		})
	})
}

var displayPicture = function(file) {
	$(".uploaded-pictures").append("<img src=" + file.url + " alt=" + file.filename + " width=160 height=160/>")
}

var addAttachmentID = function(file) {

}

var displayError = function(textStatus) {
	alert(textStatus);
}
	// Upload a File with filepicker.  Fires FPCallback.  This callback has "event.fpfiles, an array of all files"
	// url, filename, mimetype, size
	// This call back will do three things.
	// 1.  Create Attachment instance through AJAX.
	// 2.	 Display picture with X button to delete.
	// 3.  Add attachment ID to hidden form field.

	//	This way, only need one filepicker instance
	//	What happens when user submits new dish?

	//Form has hidden field of attachments ID's, builds through association.

	//


</script>
